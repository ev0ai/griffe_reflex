{
  "name": "select",
  "module_path": "components.radix.themes.components.select",
  "module_name": "select",
  "file_path": "/Users/dave/code/griffe_reflex/reflex/reflex/components/radix/themes/components/select.py",
  "doc_path": "/Users/dave/code/griffe_reflex/reflex/docs/library/forms/select-ll.md",
  "docstring": "Select components namespace.",
  "bases": [
    "ComponentNamespace"
  ],
  "properties": [],
  "events": [],
  "styling_props": [],
  "subcomponents": {
    "SelectRoot": {
      "name": "SelectRoot",
      "docstring": "Displays a list of options for the user to pick from, triggered by a button.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [
        {
          "name": "default_value",
          "type": "str",
          "docstring": "The value of the select when initially rendered. Use when you do not need to control the state of the select."
        },
        {
          "name": "value",
          "type": "str",
          "docstring": "The controlled value of the select. Should be used in conjunction with on_change."
        },
        {
          "name": "default_open",
          "type": "bool",
          "docstring": "The open state of the select when it is initially rendered. Use when you do not need to control its open state."
        },
        {
          "name": "open",
          "type": "bool",
          "docstring": "The controlled open state of the select. Must be used in conjunction with on_open_change."
        },
        {
          "name": "name",
          "type": "str",
          "docstring": "The name of the select control when submitting the form."
        },
        {
          "name": "disabled",
          "type": "bool",
          "docstring": "When True, prevents the user from interacting with select."
        },
        {
          "name": "required",
          "type": "bool",
          "docstring": "When True, indicates that the user must select a value before the owning form can be submitted."
        }
      ],
      "events": [
        {
          "name": "on_change",
          "type": "rx.EventHandler[passthrough_event_spec(str)",
          "docstring": "Fired when the value of the select changes."
        },
        {
          "name": "on_open_change",
          "type": "rx.EventHandler[passthrough_event_spec(bool)",
          "docstring": "Fired when the select is opened or closed."
        }
      ],
      "styling_props": [
        {
          "name": "size",
          "type": "Responsive[Literal[\"1\", \"2\", \"3\"]]",
          "docstring": "The size of the select: \"1\" | \"2\" | \"3\""
        }
      ]
    },
    "SelectTrigger": {
      "name": "SelectTrigger",
      "docstring": "The button that toggles the select.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [
        {
          "name": "placeholder",
          "type": "str",
          "docstring": "The placeholder of the select trigger"
        }
      ],
      "events": [],
      "styling_props": [
        {
          "name": "variant",
          "type": "Literal[\"classic\", \"surface\", \"soft\", \"ghost\"]",
          "docstring": "Variant of the select trigger"
        },
        {
          "name": "color_scheme",
          "type": "LiteralAccentColor",
          "docstring": "The color of the select trigger"
        },
        {
          "name": "radius",
          "type": "LiteralRadius",
          "docstring": "The radius of the select trigger"
        }
      ]
    },
    "SelectContent": {
      "name": "SelectContent",
      "docstring": "The component that pops out when the select is open.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [
        {
          "name": "high_contrast",
          "type": "bool",
          "docstring": "Whether to render the select content with higher contrast color against background"
        },
        {
          "name": "position",
          "type": "Literal[\"item-aligned\", \"popper\"]",
          "docstring": "The positioning mode to use, item-aligned is the default and behaves similarly to a native MacOS menu by positioning content relative to the active item. popper positions content in the same way as our other primitives, for example Popover or DropdownMenu."
        },
        {
          "name": "side",
          "type": "Literal[\"top\", \"right\", \"bottom\", \"left\"]",
          "docstring": "The preferred side of the anchor to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled. Only available when position is set to popper."
        },
        {
          "name": "side_offset",
          "type": "int",
          "docstring": "The distance in pixels from the anchor. Only available when position is set to popper."
        },
        {
          "name": "align",
          "type": "Literal[\"start\", \"center\", \"end\"]",
          "docstring": "The preferred alignment against the anchor. May change when collisions occur. Only available when position is set to popper."
        },
        {
          "name": "align_offset",
          "type": "int",
          "docstring": "The vertical distance in pixels from the anchor. Only available when position is set to popper."
        }
      ],
      "events": [
        {
          "name": "on_close_auto_focus",
          "type": "rx.EventHandler[no_args_event_spec",
          "docstring": "Fired when the select content is closed."
        },
        {
          "name": "on_escape_key_down",
          "type": "rx.EventHandler[no_args_event_spec",
          "docstring": "Fired when the escape key is pressed."
        },
        {
          "name": "on_pointer_down_outside",
          "type": "rx.EventHandler[no_args_event_spec",
          "docstring": "Fired when a pointer down event happens outside the select content."
        }
      ],
      "styling_props": [
        {
          "name": "variant",
          "type": "Literal[\"solid\", \"soft\"]",
          "docstring": "The variant of the select content"
        },
        {
          "name": "color_scheme",
          "type": "LiteralAccentColor",
          "docstring": "The color of the select content"
        }
      ]
    },
    "SelectGroup": {
      "name": "SelectGroup",
      "docstring": "Used to group multiple items.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [],
      "events": [],
      "styling_props": []
    },
    "SelectItem": {
      "name": "SelectItem",
      "docstring": "The component that contains the select items.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [
        {
          "name": "value",
          "type": "str",
          "docstring": "The value given as data when submitting a form with a name."
        },
        {
          "name": "disabled",
          "type": "bool",
          "docstring": "Whether the select item is disabled"
        }
      ],
      "events": [],
      "styling_props": []
    },
    "SelectSeparator": {
      "name": "SelectSeparator",
      "docstring": "Used to visually separate items in the Select.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [],
      "events": [],
      "styling_props": []
    },
    "SelectLabel": {
      "name": "SelectLabel",
      "docstring": "Used to render the label of a group, it isn't focusable using arrow keys.",
      "bases": [
        "RadixThemesComponent"
      ],
      "properties": [],
      "events": [],
      "styling_props": []
    },
    "HighLevelSelect": {
      "name": "HighLevelSelect",
      "docstring": "High level wrapper for the Select component.",
      "bases": [
        "SelectRoot"
      ],
      "properties": [
        {
          "name": "items",
          "type": "Sequence[str]",
          "docstring": "The items of the select."
        },
        {
          "name": "placeholder",
          "type": "str",
          "docstring": "The placeholder of the select."
        },
        {
          "name": "label",
          "type": "str",
          "docstring": "The label of the select."
        },
        {
          "name": "high_contrast",
          "type": "bool",
          "docstring": "Whether to render the select with higher contrast color against background."
        },
        {
          "name": "position",
          "type": "Literal[\"item-aligned\", \"popper\"]",
          "docstring": "The positioning mode to use. Default is \"item-aligned\"."
        }
      ],
      "events": [],
      "styling_props": [
        {
          "name": "color_scheme",
          "type": "LiteralAccentColor",
          "docstring": "The color of the select."
        },
        {
          "name": "variant",
          "type": "Literal[\"classic\", \"surface\", \"soft\", \"ghost\"]",
          "docstring": "The variant of the select."
        },
        {
          "name": "radius",
          "type": "LiteralRadius",
          "docstring": "The radius of the select."
        },
        {
          "name": "width",
          "type": "str",
          "docstring": "The width of the select."
        }
      ]
    }
  }
}