{
  "name": "select",
  "module_path": "components.radix.themes.components.select",
  "module_name": "select",
  "file_path": "/Users/dave/code/griffe_reflex/reflex/reflex/components/radix/themes/components/select.py",
  "doc_path": null,
  "docstring": "Select components namespace.",
  "bases": [
    "ComponentNamespace"
  ],
  "supports_common_props": true,
  "properties": [
    {
      "name": "root",
      "type": "Any",
      "description": ""
    },
    {
      "name": "trigger",
      "type": "Any",
      "description": ""
    },
    {
      "name": "content",
      "type": "Any",
      "description": ""
    },
    {
      "name": "group",
      "type": "Any",
      "description": ""
    },
    {
      "name": "item",
      "type": "Any",
      "description": ""
    },
    {
      "name": "separator",
      "type": "Any",
      "description": ""
    },
    {
      "name": "label",
      "type": "Any",
      "description": ""
    }
  ],
  "event_names": [
    "on_blur",
    "on_click",
    "on_context_menu",
    "on_double_click",
    "on_focus",
    "on_mount",
    "on_mouse_down",
    "on_mouse_enter",
    "on_mouse_leave",
    "on_mouse_move",
    "on_mouse_out",
    "on_mouse_over",
    "on_mouse_up",
    "on_scroll",
    "on_unmount"
  ],
  "styling_props": [],
  "subcomponents": {
    "SelectRoot": {
      "name": "SelectRoot",
      "docstring": "Displays a list of options for the user to pick from, triggered by a button.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "default_value",
          "type": "Var[str]",
          "description": "The value of the select when initially rendered. Use when you do not need to control the state of the select."
        },
        {
          "name": "value",
          "type": "Var[str]",
          "description": "The controlled value of the select. Should be used in conjunction with on_change."
        },
        {
          "name": "default_open",
          "type": "Var[bool]",
          "description": "The open state of the select when it is initially rendered. Use when you do not need to control its open state."
        },
        {
          "name": "open",
          "type": "Var[bool]",
          "description": "The controlled open state of the select. Must be used in conjunction with on_open_change."
        },
        {
          "name": "name",
          "type": "Var[str]",
          "description": "The name of the select control when submitting the form."
        },
        {
          "name": "disabled",
          "type": "Var[bool]",
          "description": "When True, prevents the user from interacting with select."
        },
        {
          "name": "required",
          "type": "Var[bool]",
          "description": "When True, indicates that the user must select a value before the owning form can be submitted."
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount",
        "on_change",
        "on_open_change"
      ],
      "styling_props": [
        {
          "name": "size",
          "type": "Var[Responsive[Literal[\"1\", \"2\", \"3\"]]]",
          "description": "The size of the select | \"3\"",
          "values": [
            "1",
            "2",
            "3"
          ]
        }
      ]
    },
    "SelectTrigger": {
      "name": "SelectTrigger",
      "docstring": "The button that toggles the select.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "placeholder",
          "type": "Var[str]",
          "description": "The placeholder of the select trigger"
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": [
        {
          "name": "variant",
          "type": "Var[Literal[\"classic\", \"surface\", \"soft\", \"ghost\"]]",
          "description": "Variant of the select trigger"
        },
        {
          "name": "color_scheme",
          "type": "Var[LiteralAccentColor]",
          "description": "The color of the select trigger",
          "values": [
            "gray",
            "tomato",
            "red",
            "ruby",
            "crimson",
            "pink",
            "plum",
            "purple",
            "violet",
            "iris",
            "indigo",
            "blue",
            "cyan",
            "teal",
            "jade",
            "green",
            "grass",
            "brown",
            "orange",
            "sky",
            "mint",
            "lime",
            "yellow",
            "amber",
            "gold",
            "bronze"
          ]
        },
        {
          "name": "radius",
          "type": "Var[LiteralRadius]",
          "description": "The radius of the select trigger",
          "values": [
            "none",
            "small",
            "medium",
            "large",
            "full"
          ]
        }
      ]
    },
    "SelectContent": {
      "name": "SelectContent",
      "docstring": "The component that pops out when the select is open.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "high_contrast",
          "type": "Var[bool]",
          "description": "Whether to render the select content with higher contrast color against background"
        },
        {
          "name": "position",
          "type": "Var[Literal[\"item-aligned\", \"popper\"]]",
          "description": "The positioning mode to use, item-aligned is the default and behaves similarly to a native MacOS menu by positioning content relative to the active item. popper positions content in the same way as our other primitives, for example Popover or DropdownMenu."
        },
        {
          "name": "side",
          "type": "Var[Literal[\"top\", \"right\", \"bottom\", \"left\"]]",
          "description": "The preferred side of the anchor to render against when open. Will be reversed when collisions occur and avoidCollisions is enabled. Only available when position is set to popper."
        },
        {
          "name": "side_offset",
          "type": "Var[int]",
          "description": "The distance in pixels from the anchor. Only available when position is set to popper."
        },
        {
          "name": "align",
          "type": "Var[Literal[\"start\", \"center\", \"end\"]]",
          "description": "The preferred alignment against the anchor. May change when collisions occur. Only available when position is set to popper."
        },
        {
          "name": "align_offset",
          "type": "Var[int]",
          "description": "The vertical distance in pixels from the anchor. Only available when position is set to popper."
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount",
        "on_close_auto_focus",
        "on_escape_key_down",
        "on_pointer_down_outside"
      ],
      "styling_props": [
        {
          "name": "variant",
          "type": "Var[Literal[\"solid\", \"soft\"]]",
          "description": "The variant of the select content"
        },
        {
          "name": "color_scheme",
          "type": "Var[LiteralAccentColor]",
          "description": "The color of the select content",
          "values": [
            "gray",
            "tomato",
            "red",
            "ruby",
            "crimson",
            "pink",
            "plum",
            "purple",
            "violet",
            "iris",
            "indigo",
            "blue",
            "cyan",
            "teal",
            "jade",
            "green",
            "grass",
            "brown",
            "orange",
            "sky",
            "mint",
            "lime",
            "yellow",
            "amber",
            "gold",
            "bronze"
          ]
        }
      ]
    },
    "SelectGroup": {
      "name": "SelectGroup",
      "docstring": "Used to group multiple items.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": []
    },
    "SelectItem": {
      "name": "SelectItem",
      "docstring": "The component that contains the select items.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "value",
          "type": "Var[str]",
          "description": "The value given as data when submitting a form with a name."
        },
        {
          "name": "disabled",
          "type": "Var[bool]",
          "description": "Whether the select item is disabled"
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": []
    },
    "SelectSeparator": {
      "name": "SelectSeparator",
      "docstring": "Used to visually separate items in the Select.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": []
    },
    "SelectLabel": {
      "name": "SelectLabel",
      "docstring": "Used to render the label of a group, it isn't focusable using arrow keys.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": []
    },
    "HighLevelSelect": {
      "name": "HighLevelSelect",
      "docstring": "High level wrapper for the Select component.",
      "bases": [
        "SelectRoot"
      ],
      "supports_common_props": false,
      "properties": [
        {
          "name": "items",
          "type": "Var[Sequence[str]]",
          "description": "The items of the select."
        },
        {
          "name": "placeholder",
          "type": "Var[str]",
          "description": "The placeholder of the select."
        },
        {
          "name": "label",
          "type": "Var[str]",
          "description": "The label of the select."
        },
        {
          "name": "high_contrast",
          "type": "Var[bool]",
          "description": "Whether to render the select with higher contrast color against background."
        },
        {
          "name": "width",
          "type": "Var[str]",
          "description": "Create a select component.\n\n        Args:\n            items: The items of the select.\n            **props: Additional properties to apply to the select component.\n\n        Returns:\n            The select component."
        },
        {
          "name": "position",
          "type": "Var[Literal[\"item-aligned\", \"popper\"]]",
          "description": "Create a select component.\n\n        Args:\n            items: The items of the select.\n            **props: Additional properties to apply to the select component.\n\n        Returns:\n            The select component."
        }
      ],
      "event_names": [],
      "styling_props": [
        {
          "name": "color_scheme",
          "type": "Var[LiteralAccentColor]",
          "description": "The color of the select.",
          "values": [
            "gray",
            "tomato",
            "red",
            "ruby",
            "crimson",
            "pink",
            "plum",
            "purple",
            "violet",
            "iris",
            "indigo",
            "blue",
            "cyan",
            "teal",
            "jade",
            "green",
            "grass",
            "brown",
            "orange",
            "sky",
            "mint",
            "lime",
            "yellow",
            "amber",
            "gold",
            "bronze"
          ]
        },
        {
          "name": "variant",
          "type": "Var[Literal[\"classic\", \"surface\", \"soft\", \"ghost\"]]",
          "description": "The variant of the select."
        },
        {
          "name": "radius",
          "type": "Var[LiteralRadius]",
          "description": "The radius of the select.",
          "values": [
            "none",
            "small",
            "medium",
            "large",
            "full"
          ]
        }
      ]
    }
  }
}