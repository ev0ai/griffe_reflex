{
  "name": "tabs",
  "module_path": "components.radix.themes.components.tabs",
  "module_name": "tabs",
  "file_path": "/Users/dave/code/griffe_reflex/reflex/reflex/components/radix/themes/components/tabs.py",
  "doc_path": "/Users/dave/code/griffe_reflex/reflex/docs/library/disclosure/tabs.md",
  "docstring": "Set of content sections to be displayed one at a time.",
  "bases": [
    "ComponentNamespace"
  ],
  "supports_common_props": true,
  "properties": [
    {
      "name": "root",
      "type": "Any",
      "description": ""
    },
    {
      "name": "list",
      "type": "Any",
      "description": ""
    },
    {
      "name": "trigger",
      "type": "Any",
      "description": ""
    },
    {
      "name": "content",
      "type": "Any",
      "description": ""
    }
  ],
  "event_names": [
    "on_blur",
    "on_click",
    "on_context_menu",
    "on_double_click",
    "on_focus",
    "on_mount",
    "on_mouse_down",
    "on_mouse_enter",
    "on_mouse_leave",
    "on_mouse_move",
    "on_mouse_out",
    "on_mouse_over",
    "on_mouse_up",
    "on_scroll",
    "on_unmount"
  ],
  "styling_props": [],
  "subcomponents": {
    "TabsRoot": {
      "name": "TabsRoot",
      "docstring": "Set of content sections to be displayed one at a time.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "default_value",
          "type": "Var[str]",
          "description": "The value of the tab that should be active when initially rendered. Use when you do not need to control the state of the tabs."
        },
        {
          "name": "value",
          "type": "Var[str]",
          "description": "The controlled value of the tab that should be active. Use when you need to control the state of the tabs."
        },
        {
          "name": "orientation",
          "type": "Var[Literal[\"horizontal\", \"vertical\"]]",
          "description": "The orientation of the tabs."
        },
        {
          "name": "dir",
          "type": "Var[Literal[\"ltr\", \"rtl\"]]",
          "description": "Reading direction of the tabs."
        },
        {
          "name": "activation_mode",
          "type": "Var[Literal[\"automatic\", \"manual\"]]",
          "description": "Add style for the component.\n\n        Returns:\n            The style to add."
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount",
        "on_change"
      ],
      "styling_props": []
    },
    "TabsList": {
      "name": "TabsList",
      "docstring": "Contains the triggers that sit alongside the active content.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "loop",
          "type": "Var[bool]",
          "description": "Add style for the component.\n\n        Returns:\n            The style to add."
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": [
        {
          "name": "size",
          "type": "Var[Responsive[Literal[\"1\", \"2\"]]]",
          "description": "Add style for the component.\n\n        Returns:\n            The style to add."
        }
      ]
    },
    "TabsTrigger": {
      "name": "TabsTrigger",
      "docstring": "The button that activates its associated content.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "value",
          "type": "Var[str]",
          "description": "The value of the tab. Must be unique for each tab."
        },
        {
          "name": "disabled",
          "type": "Var[bool]",
          "description": "Whether the tab is disabled"
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": [
        {
          "name": "color_scheme",
          "type": "Var[LiteralAccentColor]",
          "description": "Create a TabsTrigger component.\n\n        Args:\n            *children: The children of the component.\n            **props: The properties of the component.\n\n        Returns:\n            The TabsTrigger Component.",
          "values": [
            "gray",
            "tomato",
            "red",
            "ruby",
            "crimson",
            "pink",
            "plum",
            "purple",
            "violet",
            "iris",
            "indigo",
            "blue",
            "cyan",
            "teal",
            "jade",
            "green",
            "grass",
            "brown",
            "orange",
            "sky",
            "mint",
            "lime",
            "yellow",
            "amber",
            "gold",
            "bronze"
          ]
        }
      ]
    },
    "TabsContent": {
      "name": "TabsContent",
      "docstring": "Contains the content associated with each trigger.",
      "bases": [
        "RadixThemesComponent"
      ],
      "supports_common_props": true,
      "properties": [
        {
          "name": "value",
          "type": "Var[str]",
          "description": "Add style for the component.\n\n        Returns:\n            The style to add."
        },
        {
          "name": "force_mount",
          "type": "Var[bool]",
          "description": "Add style for the component.\n\n        Returns:\n            The style to add."
        }
      ],
      "event_names": [
        "on_blur",
        "on_click",
        "on_context_menu",
        "on_double_click",
        "on_focus",
        "on_mount",
        "on_mouse_down",
        "on_mouse_enter",
        "on_mouse_leave",
        "on_mouse_move",
        "on_mouse_out",
        "on_mouse_over",
        "on_mouse_up",
        "on_scroll",
        "on_unmount"
      ],
      "styling_props": []
    }
  }
}